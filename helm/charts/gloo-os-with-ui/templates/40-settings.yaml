{{ if .Values.settings.create }}

apiVersion: gloo.solo.io/v1
kind: Settings
metadata:
  labels:
    app: gloo
    gloo: settings
  name: default
  namespace: {{ .Release.Namespace }}
spec:
  gloo:
    {{- if .Values.global.glooMtls.enabled }}
    xdsBindAddr: "127.0.0.1:9999"
    restXdsBindAddr: "127.0.0.1:9998"
    {{- else }}
    xdsBindAddr: "0.0.0.0:{{ .Values.gloo.gloo.deployment.xdsPort }}"
    restXdsBindAddr: "0.0.0.0:{{ .Values.gloo.gloo.deployment.restXdsPort }}"
    enableRestEds: {{ .Values.settings.enableRestEds | default false }}
    {{- end }}
{{- if .Values.settings.replaceInvalidRoutes }}
    invalidConfigPolicy:
{{ toYaml .Values.settings.invalidConfigPolicy | indent 6}}
{{- end }}
    disableKubernetesDestinations: {{ .Values.settings.disableKubernetesDestinations | default false }}
    disableProxyGarbageCollection: {{ .Values.settings.disableProxyGarbageCollection | default false }}
{{- if .Values.gloo.settings.aws.enableServiceAccountCredentials }}
    awsOptions:
      serviceAccountCredentials:
        cluster: aws_sts_cluster
{{- if ne .Values.gloo.settings.aws.stsCredentialsRegion ""}}
        uri: sts.{{ .Values.gloo.settings.aws.stsCredentialsRegion }}.amazonaws.com
{{- else }}
        uri: sts.amazonaws.com
{{- end }}
{{- else if .Values.settings.aws.enableCredentialsDiscovery }}
    awsOptions:
      enableCredentialsDiscovey: true
{{- end }}
  {{- $releasenamespace := .Release.Namespace}}
  discoveryNamespace: {{ .Values.settings.writeNamespace | default $releasenamespace }}
  kubernetesArtifactSource: {}
  kubernetesConfigSource: {}
  kubernetesSecretSource: {}
  refreshRate: 60s


{{- if .Values.gloo.gateway.validation.enabled }}
  gateway:
    validation:
      proxyValidationServerAddr: "gloo:{{ .Values.gloo.gloo.deployment.validationPort }}"
      alwaysAccept: {{ .Values.gloo.gateway.validation.alwaysAcceptResources }}
      disableTransformationValidation: {{ .Values.gloo.gateway.validation.disableTransformationValidation }}
{{- end }}

{{- if .Values.gloo.discovery.fdsMode }}
  discovery:
    fdsMode: {{.Values.gloo.discovery.fdsMode}}
{{- end }}

{{- $extauth := .Values.global.extensions.extAuth }}
{{- if $extauth.enabled }}
  {{- if or $extauth.envoySidecar $extauth.standaloneDeployment }}
  extauth:
    extauthzServerRef:
      # arbitrarily default to the standalone deployment name even if we're using both
      {{- if $extauth.standaloneDeployment }}
      name: extauth
      {{- else }}
      name: extauth-sidecar
      {{- end }}
      namespace: {{ .Release.Namespace }}
    {{- if $extauth.requestTimeout }}
    requestTimeout: {{ quote $extauth.requestTimeout }}
    {{- end }}
    {{- if $extauth.userIdHeader }}
    userIdHeader: {{ quote $extauth.userIdHeader }}
    {{- end }}
  {{- end }}
{{- end}}
{{- if .Values.rateLimit.enabled }}
  ratelimitServer:
    ratelimit_server_ref:
      name: rate-limit
      namespace: {{ .Release.Namespace }}
{{- end }}

{{- if .Values.settings.rateLimit }}
  rateLimit:
{{- toYaml .Values.settings.rateLimit | nindent 4 }}
{{- end }}

{{- if .Values.settings.singleNamespace }}
  watchNamespaces:
    - {{ .Release.Namespace }}
{{- else }}
{{- with .Values.settings.watchNamespaces }}
  watchNamespaces:
  {{- range . }}
  - {{ . }}
  {{- end }}
{{- end }}

{{- end }}
{{- end }}
